version: '3.8'

services:
  user_db:
    image: postgres:13-alpine
    container_name: user_postgres_db
    environment:
      POSTGRES_USER: microuser
      POSTGRES_PASSWORD: micro_pass
      POSTGRES_DB: e_commerce_user
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ecomm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U microuser -d e_commerce_user -q"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  product_db:
    image: postgres:13-alpine
    container_name: product_postgres_db
    environment:
      POSTGRES_USER: microprod
      POSTGRES_PASSWORD: prod_pass
      POSTGRES_DB: e_commerce_product
    volumes:
      - product_postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - ecomm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U microprod -d e_commerce_product -q"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  user_service:
    build:
      context: ./user.service
      dockerfile: Dockerfile
    container_name: user_api_service
    command: /app/entrypoint.sh
    volumes:
      - ./user.service:/app
    ports:
      - "8000:8000"
    depends_on:
      user_db:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: 1
    networks:
      - ecomm_network

  product_service:
    build:
      context: ./product.service
      dockerfile: Dockerfile
    container_name: product_api_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload --access-log
    volumes:
      - ./product.service:/app
    ports:
      - "8001:8001"
    depends_on:
      product_db:
        condition: service_healthy
      user_service:
        condition: service_started
    environment:
      PYTHONUNBUFFERED: 1
    networks:
      - ecomm_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend_app
    ports:
      - "5173:80"
    environment:
      REACT_APP_USER_SERVICE_URL: http://localhost:8000
      REACT_APP_PRODUCT_SERVICE_URL: http://localhost:8001
    depends_on:
      - user_service
      - product_service
    networks:
      - ecomm_network

volumes:
  user_postgres_data:
  product_postgres_data:

networks:
  ecomm_network:
    driver: bridge
